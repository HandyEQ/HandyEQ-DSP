function [  ] = eq_createcoefffile3stage(coeffStruct1,coeffStruct2,coeffStruct3, Fs, filename)
%% eq_createcoefffile3stage.m
%
%   by Preben Thorød - 
%   Gr 6 DAT096 - HandyEq - Chalmers University of Technology
%
%   Generates C source files for holding biquad filter coefficients for
%   3-band equalizer.
%
% Dependencies:
%   Cells with coefficients need to be generated by eq_coeffgen3stage.m
%   script before callng this function.
%
%   Inputs:
%       [CoeffStruct1]   Cell with coefficients strucutres for stage1
%       [CoeffStruct2]   Cell with coefficients strucutres for stage2
%       [CoeffStruct3]   Cell with coefficients strucutres for stage3
%       [Fs]             Sample rate
%       [filename]  
%   Outputs:
%       [filename].c and [filename].h files
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
%(Struct arrays needs to have same length)
if (isstruct(coeffStruct1))
    createArray = 0;
elseif (iscell(coeffStruct1))
    createArray = 1;
    arraysize = length(coeffStruct1);
end

% File output options
filepath = 'Dat096/';
Cfilestring = sprintf('%s%s.c',filepath,filename);
Hfilestring = sprintf('%s%s.h',filepath,filename);
% C variable names:
StructName1 = 'bass';
StructName2 = 'midrange';
StructName3 = 'treble';


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   C file
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

fCfile = fopen(Cfilestring,'wt');

fprintf(fCfile,'/* %s.c */\n',filename);
fprintf(fCfile,'/* Initialization of coefficients for 3-band equalizer	*/\n');
fprintf(fCfile,'/* For use with HandyEQ project MPEES-1 DAT096 Group6	*/\n');
fprintf(fCfile,'/* Preben Thorod @ HandyEQ                              */\n');
fprintf(fCfile,'/* Fs = %iHz                                            */\n',Fs);
fprintf(fCfile,'/* Generated: ');
fprintf(fCfile,datestr(now,'dd mmmm yyyy HH:MM:SS */\n'));

fprintf(fCfile,'\n');
fprintf(fCfile,'#include <string.h>\n');
fprintf(fCfile,'#include "biquad.h"\n');
fprintf(fCfile,'#include "%s.h"\n',filename); 
fprintf(fCfile,'\n');

%Stage1:
fprintf(fCfile,'BiquadCoeff %s',StructName1);
    if createArray, fprintf(fCfile,'[%i]',arraysize) ,end 
    fprintf(fCfile,';\n');
%Stage2:
fprintf(fCfile,'BiquadCoeff %s',StructName2);
    if createArray, fprintf(fCfile,'[%i]',arraysize) ,end 
    fprintf(fCfile,';\n');
%Stage3:
fprintf(fCfile,'BiquadCoeff %s',StructName3);
    if createArray, fprintf(fCfile,'[%i]',arraysize) ,end 
    fprintf(fCfile,';\n');
fprintf(fCfile,'\n');

fprintf(fCfile,'void initEqCoeff() {\n');

% Coefficients:
if createArray == 0
    %Stage1:

    fprintf(fCfile,'	strcpy(%s.filtertype, "%s");\n',StructName1,coeffStruct1.type);
    fprintf(fCfile,'	strcpy(%s.fc, "%dHz");\n',StructName1,coeffStruct1.fc);
    fprintf(fCfile,'	strcpy(%s.gain, "%ddB");\n',StructName1,coeffStruct1.gain);    
    fprintf(fCfile,'	strcpy(%s.q, "%s");\n',StructName1,num2str(coeffStruct1.q));
    fprintf(fCfile,'	strcpy(%s.dataformat, "%s");\n',StructName1,coeffStruct1.dataformat);
    fprintf(fCfile,'	%s.scalefactor =  %i;\n',StructName1,coeffStruct1.scalefactor);

    fprintf(fCfile,'	%s.a0 = %d;\n',StructName1,coeffStruct1.a(1));
    fprintf(fCfile,'	%s.a1 = %d;\n',StructName1,coeffStruct1.a(2));
    fprintf(fCfile,'	%s.a2 = %d;\n',StructName1,coeffStruct1.a(3));
    fprintf(fCfile,'	%s.b0 = %d;\n',StructName1,coeffStruct1.b(1));
    fprintf(fCfile,'	%s.b1 = %d;\n',StructName1,coeffStruct1.b(2));
    fprintf(fCfile,'	%s.b2 = %d;\n',StructName1,coeffStruct1.b(3));
    %Stage2:
    fprintf(fCfile,'	strcpy(%s.filtertype, "%s");\n',StructName2,coeffStruct2.type);
    fprintf(fCfile,'	strcpy(%s.fc, "%dHz");\n',StructName2,coeffStruct2.fc);
    fprintf(fCfile,'	strcpy(%s.gain, "%ddB");\n',StructName2,coeffStruct2.gain);    
    fprintf(fCfile,'	strcpy(%s.q, "%s");\n',StructName2,num2str(coeffStruct2.q));
    fprintf(fCfile,'	strcpy(%s.dataformat, "%s");\n',StructName2,coeffStruct2.dataformat);
    fprintf(fCfile,'	%s.scalefactor =  %i;\n',StructName2,coeffStruct2.scalefactor);

    fprintf(fCfile,'	%s.a0 = %d;\n',StructName2,coeffStruct2.a(1));
    fprintf(fCfile,'	%s.a1 = %d;\n',StructName2,coeffStruct2.a(2));
    fprintf(fCfile,'	%s.a2 = %d;\n',StructName2,coeffStruct2.a(3));
    fprintf(fCfile,'	%s.b0 = %d;\n',StructName2,coeffStruct2.b(1));
    fprintf(fCfile,'	%s.b1 = %d;\n',StructName2,coeffStruct2.b(2));
    fprintf(fCfile,'	%s.b2 = %d;\n',StructName2,coeffStruct2.b(3));

    %Stage3:
    fprintf(fCfile,'	strcpy(%s.filtertype, "%s");\n',StructName3,coeffStruct3.type);
    fprintf(fCfile,'	strcpy(%s.fc, "%dHz");\n',StructName3,coeffStruct3.fc);
    fprintf(fCfile,'	strcpy(%s.gain, "%ddB");\n',StructName3,coeffStruct3.gain);    
    fprintf(fCfile,'	strcpy(%s.q, "%s");\n',StructName3,num2str(coeffStruct3.q));
    fprintf(fCfile,'	strcpy(%s.dataformat, "%s");\n',StructName3,coeffStruct3.dataformat);
    fprintf(fCfile,'	%s.scalefactor =  %i;\n',StructName3,coeffStruct3.scalefactor);

    fprintf(fCfile,'	%s.a0 = %d;\n',StructName3,coeffStruct3.a(1));
    fprintf(fCfile,'	%s.a1 = %d;\n',StructName3,coeffStruct3.a(2));
    fprintf(fCfile,'	%s.a2 = %d;\n',StructName3,coeffStruct3.a(3));
    fprintf(fCfile,'	%s.b0 = %d;\n',StructName3,coeffStruct3.b(1));
    fprintf(fCfile,'	%s.b1 = %d;\n',StructName3,coeffStruct3.b(2));
    fprintf(fCfile,'	%s.b2 = %d;\n',StructName3,coeffStruct3.b(3));

elseif createArray == 1
    %Stage1:
    for i = 1:arraysize
        fprintf(fCfile,'	strcpy(%s[%i].filtertype, "%s");\n',StructName1,i-1,coeffStruct1{i}.type);            
        fprintf(fCfile,'	strcpy(%s[%i].fc, "%dHz");\n',StructName1,i-1,coeffStruct1{i}.fc);
        fprintf(fCfile,'	strcpy(%s[%i].gain, "%ddB");\n',StructName1,i-1,coeffStruct1{i}.gain);    
        fprintf(fCfile,'	strcpy(%s[%i].q, "%s");\n',StructName1,i-1,num2str(coeffStruct1{i}.q));
        fprintf(fCfile,'	strcpy(%s[%i].dataformat, "%s");\n',StructName1,i-1,coeffStruct1{i}.dataformat);
        fprintf(fCfile,'	%s[%i].scalefactor =  %i;\n',StructName1,i-1,coeffStruct1{i}.scalefactor);

        fprintf(fCfile,'	%s[%i].a0 = %d;\n',StructName1,i-1,coeffStruct1{i}.a(1));
        fprintf(fCfile,'	%s[%i].a1 = %d;\n',StructName1,i-1,coeffStruct1{i}.a(2));
        fprintf(fCfile,'	%s[%i].a2 = %d;\n',StructName1,i-1,coeffStruct1{i}.a(3));
        fprintf(fCfile,'	%s[%i].b0 = %d;\n',StructName1,i-1,coeffStruct1{i}.b(1));
        fprintf(fCfile,'	%s[%i].b1 = %d;\n',StructName1,i-1,coeffStruct1{i}.b(2));
        fprintf(fCfile,'	%s[%i].b2 = %d;\n',StructName1,i-1,coeffStruct1{i}.b(3));

        fprintf(fCfile,'\n');
    end

    %Stage2:
    for i = 1:arraysize
        fprintf(fCfile,'	strcpy(%s[%i].filtertype, "%s");\n',StructName2,i-1,coeffStruct2{i}.type);            
        fprintf(fCfile,'	strcpy(%s[%i].fc, "%dHz");\n',StructName2,i-1,coeffStruct2{i}.fc);
        fprintf(fCfile,'	strcpy(%s[%i].gain, "%ddB");\n',StructName2,i-1,coeffStruct2{i}.gain);    
        fprintf(fCfile,'	strcpy(%s[%i].q, "%s");\n',StructName2,i-1,num2str(coeffStruct2{i}.q));
        fprintf(fCfile,'	strcpy(%s[%i].dataformat, "%s");\n',StructName2,i-1,coeffStruct2{i}.dataformat);
        fprintf(fCfile,'	%s[%i].scalefactor =  %i;\n',StructName2,i-1,coeffStruct2{i}.scalefactor);

        fprintf(fCfile,'	%s[%i].a0 = %d;\n',StructName2,i-1,coeffStruct2{i}.a(1));
        fprintf(fCfile,'	%s[%i].a1 = %d;\n',StructName2,i-1,coeffStruct2{i}.a(2));
        fprintf(fCfile,'	%s[%i].a2 = %d;\n',StructName2,i-1,coeffStruct2{i}.a(3));
        fprintf(fCfile,'	%s[%i].b0 = %d;\n',StructName2,i-1,coeffStruct2{i}.b(1));
        fprintf(fCfile,'	%s[%i].b1 = %d;\n',StructName2,i-1,coeffStruct2{i}.b(2));
        fprintf(fCfile,'	%s[%i].b2 = %d;\n',StructName2,i-1,coeffStruct2{i}.b(3));

        fprintf(fCfile,'\n');
    end

    %Stage3:
    for i = 1:arraysize
        fprintf(fCfile,'	strcpy(%s[%i].filtertype, "%s");\n',StructName3,i-1,coeffStruct3{i}.type);            
        fprintf(fCfile,'	strcpy(%s[%i].fc, "%dHz");\n',StructName3,i-1,coeffStruct3{i}.fc);
        fprintf(fCfile,'	strcpy(%s[%i].gain, "%ddB");\n',StructName3,i-1,coeffStruct3{i}.gain);    
        fprintf(fCfile,'	strcpy(%s[%i].q, "%s");\n',StructName3,i-1,num2str(coeffStruct3{i}.q));
        fprintf(fCfile,'	strcpy(%s[%i].dataformat, "%s");\n',StructName3,i-1,coeffStruct3{i}.dataformat);
        fprintf(fCfile,'	%s[%i].scalefactor =  %i;\n',StructName3,i-1,coeffStruct3{i}.scalefactor);

        fprintf(fCfile,'	%s[%i].a0 = %d;\n',StructName3,i-1,coeffStruct3{i}.a(1));
        fprintf(fCfile,'	%s[%i].a1 = %d;\n',StructName3,i-1,coeffStruct3{i}.a(2));
        fprintf(fCfile,'	%s[%i].a2 = %d;\n',StructName3,i-1,coeffStruct3{i}.a(3));
        fprintf(fCfile,'	%s[%i].b0 = %d;\n',StructName3,i-1,coeffStruct3{i}.b(1));
        fprintf(fCfile,'	%s[%i].b1 = %d;\n',StructName3,i-1,coeffStruct3{i}.b(2));
        fprintf(fCfile,'	%s[%i].b2 = %d;\n',StructName3,i-1,coeffStruct3{i}.b(3));

        fprintf(fCfile,'\n');
    end
end

fprintf(fCfile,'};\n');    
fprintf(fCfile,'\n');
fprintf(fCfile,'\n');
fprintf(fCfile,'\n');
fprintf(fCfile,'\n');
fprintf(fCfile,'\n');
fprintf(fCfile,'\n');

fclose(fCfile);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   header file
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

fHfile = fopen(Hfilestring,'wt');

fprintf(fHfile,'/* %s.h */\n',filename);
fprintf(fHfile,'/* Fixed point coefficients for use with 3band equalizer*/\n');
fprintf(fHfile,'/* For use with HandyEQ project MPEES-1 DAT096 Group6	*/\n');
fprintf(fCfile,'/* Fs = %iHz                                            */\n',Fs);
fprintf(fHfile,'/* Preben Thorod @ HandyEQ                              */\n');
fprintf(fHfile,'/* Generated: ');
fprintf(fHfile,datestr(now,'dd mmmm yyyy HH:MM:SS */\n'));
fprintf(fHfile,'\n');
fprintf(fHfile,'\n');  

fprintf(fHfile,'#ifndef %s_H\n',upper(filename));
fprintf(fHfile,'#define %s_H\n',upper(filename));
fprintf(fHfile,'\n');

fprintf(fHfile,'#include "biquad.h"\n');    
fprintf(fHfile,'\n');

fprintf(fHfile,'/* Global coefficient structs: */\n');

%Stage1:
fprintf(fCfile,'extern BiquadCoeff %s',StructName1);
    if createArray, fprintf(fCfile,'[%i]',arraysize) ,end 
    fprintf(fCfile,';\n');
%Stage2:
fprintf(fCfile,'extern BiquadCoeff %s',StructName2);
    if createArray, fprintf(fCfile,'[%i]',arraysize) ,end 
    fprintf(fCfile,';\n');
%Stage3:
fprintf(fCfile,'extern BiquadCoeff %s',StructName3);
    if createArray, fprintf(fCfile,'[%i]',arraysize) ,end 
    fprintf(fCfile,';\n');        


fprintf(fHfile,'\n');
fprintf(fHfile,'/* Function prototypes */\n');
fprintf(fHfile,'void initEqCoeff();\n');
fprintf(fHfile,'\n');   
fprintf(fHfile,'#endif\n');
fprintf(fHfile,'\n');
fprintf(fHfile,'\n');   


fprintf(fHfile,'\n');

fclose(fHfile);
 


end

